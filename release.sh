#!/bin/bash

# Salir inmediatamente si alg√∫n comando falla
set -e

# 1. Verificar que estamos en la rama correcta (por defecto "main")
BRANCH_ACTUAL=$(git rev-parse --abbrev-ref HEAD)
if [[ "$BRANCH_ACTUAL" != "main" ]]; then
  echo "‚ö†Ô∏è Este script debe ejecutarse en la rama 'main'. Rama actual: $BRANCH_ACTUAL"
  exit 1
fi

# 2. Asegurar que el repositorio est√° limpio
if [[ -n $(git status --porcelain) ]]; then
  echo "‚ö†Ô∏è Hay cambios sin confirmar en el repositorio. Confirma o descarta los cambios antes de continuar."
  exit 1
fi

# 3. Verificar que los commits cumplen con el formato de Conventional Commits
echo "‚úÖ Verificando el historial de commits..."
cog check --from-latest-tag

# 4. Realizar bump autom√°tico de versi√≥n con Cocogitto
echo "üöÄ Realizando bump de versi√≥n autom√°ticamente..."
cog bump --auto

# 5. Obtener la nueva versi√≥n (el bump ya cre√≥ el commit y la etiqueta)
VERSION=$(cog -v get-version)
echo "üîñ Nueva versi√≥n detectada: $VERSION"

# 6. Subir cambios y etiquetas a GitHub
echo "üì§ Subiendo cambios y etiquetas a GitHub..."
git push origin main --follow-tags

# 7. Crear un release en GitHub usando el CHANGELOG.md generado por Cocogitto
echo "üì¶ Creando release en GitHub..."
gh release create "v$VERSION" --title "Lanzamiento $VERSION" --notes-file CHANGELOG.md

echo "üéâ ¬°Lanzamiento completado con √©xito!"
